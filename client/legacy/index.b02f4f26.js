import { S as SvelteComponentDev, i as init, s as safe_not_equal, d as dispatch_dev, v as validate_slots, e as element, a as space, t as text, y as query_selector_all, c as claim_element, h as detach_dev, g as claim_space, b as children, j as claim_text, k as attr_dev, l as add_location, n as append_dev, m as insert_dev, F as noop } from './client.493f3c45.js';

/* src/routes/read/index.svelte generated by Svelte v3.29.0 */
const file = "src/routes/read/index.svelte";

function create_fragment(ctx) {
  let meta0;
  let meta1;
  let meta2;
  let t0;
  let section;
  let h1;
  let t1;
  let t2;
  let h2;
  let t3;
  let t4;
  let div;
  let a0;
  let t5;
  let t6;
  let a1;
  let t7;
  const block = {
    c: function create() {
      meta0 = element("meta");
      meta1 = element("meta");
      meta2 = element("meta");
      t0 = space();
      section = element("section");
      h1 = element("h1");
      t1 = text("Read the Oblivious Trilogy for free, right here!");
      t2 = space();
      h2 = element("h2");
      t3 = text("Tap the book icon and jump to a chapter, or start at the very beginning,\n    which is a very good place to start.");
      t4 = space();
      div = element("div");
      a0 = element("a");
      t5 = text("Let's go already!");
      t6 = space();
      a1 = element("a");
      t7 = text("Jump me to Book 3!");
      this.h();
    },
    l: function claim(nodes) {
      const head_nodes = query_selector_all("[data-svelte=\"svelte-j0v4dl\"]", document.head);
      meta0 = claim_element(head_nodes, "META", {
        property: true,
        content: true
      });
      meta1 = claim_element(head_nodes, "META", {
        name: true,
        content: true
      });
      meta2 = claim_element(head_nodes, "META", {
        name: true,
        content: true
      });
      head_nodes.forEach(detach_dev);
      t0 = claim_space(nodes);
      section = claim_element(nodes, "SECTION", {
        class: true
      });
      var section_nodes = children(section);
      h1 = claim_element(section_nodes, "H1", {
        class: true
      });
      var h1_nodes = children(h1);
      t1 = claim_text(h1_nodes, "Read the Oblivious Trilogy for free, right here!");
      h1_nodes.forEach(detach_dev);
      t2 = claim_space(section_nodes);
      h2 = claim_element(section_nodes, "H2", {
        class: true
      });
      var h2_nodes = children(h2);
      t3 = claim_text(h2_nodes, "Tap the book icon and jump to a chapter, or start at the very beginning,\n    which is a very good place to start.");
      h2_nodes.forEach(detach_dev);
      t4 = claim_space(section_nodes);
      div = claim_element(section_nodes, "DIV", {
        class: true
      });
      var div_nodes = children(div);
      a0 = claim_element(div_nodes, "A", {
        rel: true,
        href: true,
        class: true
      });
      var a0_nodes = children(a0);
      t5 = claim_text(a0_nodes, "Let's go already!");
      a0_nodes.forEach(detach_dev);
      t6 = claim_space(div_nodes);
      a1 = claim_element(div_nodes, "A", {
        rel: true,
        href: true,
        class: true
      });
      var a1_nodes = children(a1);
      t7 = claim_text(a1_nodes, "Jump me to Book 3!");
      a1_nodes.forEach(detach_dev);
      div_nodes.forEach(detach_dev);
      section_nodes.forEach(detach_dev);
      this.h();
    },
    h: function hydrate() {
      document.title = "Read the Oblivious Trilogy for Free | An outrageously inappropriate journey\n    through West Africa on a Royal Enfield";
      attr_dev(meta0, "property", "og:description");
      attr_dev(meta0, "content", "Come along on the adventure, while we make our way through West Africa on a wildly inappropriate Royal Enfield!");
      add_location(meta0, file, 7, 2, 189);
      attr_dev(meta1, "name", "twitter:description");
      attr_dev(meta1, "content", "Come along on the adventure, while we make our way through West Africa on a wildly inappropriate Royal Enfield!");
      add_location(meta1, file, 11, 2, 358);
      attr_dev(meta2, "name", "twitter:title");
      attr_dev(meta2, "content", "Read the Oblivious Trilogy for Free | An outrageously inappropriate journey through West Africa on a Royal Enfield.");
      add_location(meta2, file, 15, 2, 528);
      attr_dev(h1, "class", "text-4xl md:text-6xl text-center mb-2");
      add_location(h1, file, 22, 2, 778);
      attr_dev(h2, "class", "text-xl md:text-3xl text-center mb-12");
      add_location(h2, file, 25, 2, 892);
      attr_dev(a0, "rel", "prefetch");
      attr_dev(a0, "href", "read/1/1");
      attr_dev(a0, "class", "inline-block text-xl sm:text-2xl p-4 mx-4 my-2 rounded-lg no-underline bg-oblivious");
      add_location(a0, file, 30, 4, 1143);
      attr_dev(a1, "rel", "prefetch");
      attr_dev(a1, "href", "read/3/1");
      attr_dev(a1, "class", "inline-block text-xl sm:text-2xl p-4 mx-4 my-2 rounded-lg no-underline bg-white border border-solid border-oblivious");
      add_location(a1, file, 37, 4, 1330);
      attr_dev(div, "class", "flex flex-col md:flex-row justify-center items-center");
      add_location(div, file, 29, 2, 1071);
      attr_dev(section, "class", "flex flex-col items-center mt-12 md:mt-28 mb-24");
      add_location(section, file, 21, 0, 710);
    },
    m: function mount(target, anchor) {
      append_dev(document.head, meta0);
      append_dev(document.head, meta1);
      append_dev(document.head, meta2);
      insert_dev(target, t0, anchor);
      insert_dev(target, section, anchor);
      append_dev(section, h1);
      append_dev(h1, t1);
      append_dev(section, t2);
      append_dev(section, h2);
      append_dev(h2, t3);
      append_dev(section, t4);
      append_dev(section, div);
      append_dev(div, a0);
      append_dev(a0, t5);
      append_dev(div, t6);
      append_dev(div, a1);
      append_dev(a1, t7);
    },
    p: noop,
    i: noop,
    o: noop,
    d: function destroy(detaching) {
      detach_dev(meta0);
      detach_dev(meta1);
      detach_dev(meta2);
      if (detaching) detach_dev(t0);
      if (detaching) detach_dev(section);
    }
  };
  dispatch_dev("SvelteRegisterBlock", {
    block,
    id: create_fragment.name,
    type: "component",
    source: "",
    ctx
  });
  return block;
}

function instance($$self, $$props) {
  let {
    $$slots: slots = {},
    $$scope
  } = $$props;
  validate_slots("Read", slots, []);
  const writable_props = [];
  Object.keys($$props).forEach(key => {
    if (!~writable_props.indexOf(key) && key.slice(0, 2) !== "$$") console.warn(`<Read> was created with unknown prop '${key}'`);
  });
  return [];
}

class Read extends SvelteComponentDev {
  constructor(options) {
    super(options);
    init(this, options, instance, create_fragment, safe_not_equal, {});
    dispatch_dev("SvelteRegisterComponent", {
      component: this,
      tagName: "Read",
      options,
      id: create_fragment.name
    });
  }

}

export default Read;
